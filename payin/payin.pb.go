// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.17.3
// source: payin.proto

package payin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PayinQueryPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page          int32   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32   `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderStatuses []int32 `protobuf:"varint,3,rep,packed,name=orderStatuses,proto3" json:"orderStatuses,omitempty"` // [0, 1, 2] 数组格式
	MerchantNo    string  `protobuf:"bytes,4,opt,name=merchantNo,proto3" json:"merchantNo,omitempty"`
	OutTradeNo    string  `protobuf:"bytes,5,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	Country       string  `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	Currency      string  `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty"`
	UserId        int64   `protobuf:"varint,8,opt,name=userId,proto3" json:"userId,omitempty"`   // 商户下的用户id
	OrderId       int64   `protobuf:"varint,9,opt,name=orderId,proto3" json:"orderId,omitempty"` // 订单ID
	CreateBegin   int64   `protobuf:"varint,10,opt,name=createBegin,proto3" json:"createBegin,omitempty"`
	CreateEnd     int64   `protobuf:"varint,11,opt,name=createEnd,proto3" json:"createEnd,omitempty"`
	UpdateBegin   int64   `protobuf:"varint,12,opt,name=updateBegin,proto3" json:"updateBegin,omitempty"`
	UpdateEnd     int64   `protobuf:"varint,13,opt,name=updateEnd,proto3" json:"updateEnd,omitempty"`
}

func (x *PayinQueryPageRequest) Reset() {
	*x = PayinQueryPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayinQueryPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayinQueryPageRequest) ProtoMessage() {}

func (x *PayinQueryPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayinQueryPageRequest.ProtoReflect.Descriptor instead.
func (*PayinQueryPageRequest) Descriptor() ([]byte, []int) {
	return file_payin_proto_rawDescGZIP(), []int{0}
}

func (x *PayinQueryPageRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PayinQueryPageRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PayinQueryPageRequest) GetOrderStatuses() []int32 {
	if x != nil {
		return x.OrderStatuses
	}
	return nil
}

func (x *PayinQueryPageRequest) GetMerchantNo() string {
	if x != nil {
		return x.MerchantNo
	}
	return ""
}

func (x *PayinQueryPageRequest) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *PayinQueryPageRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *PayinQueryPageRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PayinQueryPageRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PayinQueryPageRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *PayinQueryPageRequest) GetCreateBegin() int64 {
	if x != nil {
		return x.CreateBegin
	}
	return 0
}

func (x *PayinQueryPageRequest) GetCreateEnd() int64 {
	if x != nil {
		return x.CreateEnd
	}
	return 0
}

func (x *PayinQueryPageRequest) GetUpdateBegin() int64 {
	if x != nil {
		return x.UpdateBegin
	}
	return 0
}

func (x *PayinQueryPageRequest) GetUpdateEnd() int64 {
	if x != nil {
		return x.UpdateEnd
	}
	return 0
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize    int32 `protobuf:"varint,1,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Page        int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	CurrentPage int32 `protobuf:"varint,3,opt,name=currentPage,proto3" json:"currentPage,omitempty"`
	Total       int32 `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_payin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_payin_proto_rawDescGZIP(), []int{1}
}

func (x *Pagination) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *Pagination) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetCurrentPage() int32 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *Pagination) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type PayinQueryPageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse *BaseResponse                 `protobuf:"bytes,1,opt,name=baseResponse,proto3" json:"baseResponse,omitempty"`
	Items        *PayinQueryPageResponse_Items `protobuf:"bytes,2,opt,name=items,proto3" json:"items,omitempty"`
	Pagination   *Pagination                   `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *PayinQueryPageResponse) Reset() {
	*x = PayinQueryPageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayinQueryPageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayinQueryPageResponse) ProtoMessage() {}

func (x *PayinQueryPageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayinQueryPageResponse.ProtoReflect.Descriptor instead.
func (*PayinQueryPageResponse) Descriptor() ([]byte, []int) {
	return file_payin_proto_rawDescGZIP(), []int{2}
}

func (x *PayinQueryPageResponse) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *PayinQueryPageResponse) GetItems() *PayinQueryPageResponse_Items {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *PayinQueryPageResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type PayinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantNo          string                              `protobuf:"bytes,1,opt,name=merchantNo,proto3" json:"merchantNo,omitempty"`
	OutTradeNo          string                              `protobuf:"bytes,2,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	Subject             string                              `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	TotalAmount         string                              `protobuf:"bytes,4,opt,name=totalAmount,proto3" json:"totalAmount,omitempty"`
	Currency            string                              `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	Country             string                              `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	UserId              string                              `protobuf:"bytes,7,opt,name=userId,proto3" json:"userId,omitempty"`
	Integrate           string                              `protobuf:"bytes,8,opt,name=integrate,proto3" json:"integrate,omitempty"`
	ExpireTime          string                              `protobuf:"bytes,9,opt,name=expireTime,proto3" json:"expireTime,omitempty"`
	PaymentDetail       *PayinRequest_Paymentdetail         `protobuf:"bytes,10,opt,name=paymentDetail,proto3" json:"paymentDetail,omitempty"`
	GoodsDetails        []*PayinRequest_Goodsdetails        `protobuf:"bytes,11,rep,name=goodsDetails,proto3" json:"goodsDetails,omitempty"`
	ShippingInfo        *PayinRequest_Shippinginfo          `protobuf:"bytes,12,opt,name=shippingInfo,proto3" json:"shippingInfo,omitempty"`
	BillingInfo         *PayinRequest_Billinginfo           `protobuf:"bytes,13,opt,name=billingInfo,proto3" json:"billingInfo,omitempty"`
	RiskParams          *PayinRequest_Riskparams            `protobuf:"bytes,14,opt,name=riskParams,proto3" json:"riskParams,omitempty"`
	Language            string                              `protobuf:"bytes,15,opt,name=language,proto3" json:"language,omitempty"`
	Reference           string                              `protobuf:"bytes,16,opt,name=reference,proto3" json:"reference,omitempty"`
	TerminalType        string                              `protobuf:"bytes,17,opt,name=terminalType,proto3" json:"terminalType,omitempty"`
	FrontCallbackUrl    string                              `protobuf:"bytes,18,opt,name=frontCallbackUrl,proto3" json:"frontCallbackUrl,omitempty"`
	NotifyUrl           string                              `protobuf:"bytes,19,opt,name=notifyUrl,proto3" json:"notifyUrl,omitempty"`
	SeparateAccountInfo []*PayinRequest_Separateaccountinfo `protobuf:"bytes,20,rep,name=separateAccountInfo,proto3" json:"separateAccountInfo,omitempty"`
}

func (x *PayinRequest) Reset() {
	*x = PayinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayinRequest) ProtoMessage() {}

func (x *PayinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayinRequest.ProtoReflect.Descriptor instead.
func (*PayinRequest) Descriptor() ([]byte, []int) {
	return file_payin_proto_rawDescGZIP(), []int{3}
}

func (x *PayinRequest) GetMerchantNo() string {
	if x != nil {
		return x.MerchantNo
	}
	return ""
}

func (x *PayinRequest) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *PayinRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *PayinRequest) GetTotalAmount() string {
	if x != nil {
		return x.TotalAmount
	}
	return ""
}

func (x *PayinRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PayinRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *PayinRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PayinRequest) GetIntegrate() string {
	if x != nil {
		return x.Integrate
	}
	return ""
}

func (x *PayinRequest) GetExpireTime() string {
	if x != nil {
		return x.ExpireTime
	}
	return ""
}

func (x *PayinRequest) GetPaymentDetail() *PayinRequest_Paymentdetail {
	if x != nil {
		return x.PaymentDetail
	}
	return nil
}

func (x *PayinRequest) GetGoodsDetails() []*PayinRequest_Goodsdetails {
	if x != nil {
		return x.GoodsDetails
	}
	return nil
}

func (x *PayinRequest) GetShippingInfo() *PayinRequest_Shippinginfo {
	if x != nil {
		return x.ShippingInfo
	}
	return nil
}

func (x *PayinRequest) GetBillingInfo() *PayinRequest_Billinginfo {
	if x != nil {
		return x.BillingInfo
	}
	return nil
}

func (x *PayinRequest) GetRiskParams() *PayinRequest_Riskparams {
	if x != nil {
		return x.RiskParams
	}
	return nil
}

func (x *PayinRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *PayinRequest) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *PayinRequest) GetTerminalType() string {
	if x != nil {
		return x.TerminalType
	}
	return ""
}

func (x *PayinRequest) GetFrontCallbackUrl() string {
	if x != nil {
		return x.FrontCallbackUrl
	}
	return ""
}

func (x *PayinRequest) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *PayinRequest) GetSeparateAccountInfo() []*PayinRequest_Separateaccountinfo {
	if x != nil {
		return x.SeparateAccountInfo
	}
	return nil
}

type BaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 返回码
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
}

func (x *BaseResponse) Reset() {
	*x = BaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResponse) ProtoMessage() {}

func (x *BaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResponse.ProtoReflect.Descriptor instead.
func (*BaseResponse) Descriptor() ([]byte, []int) {
	return file_payin_proto_rawDescGZIP(), []int{4}
}

func (x *BaseResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BaseResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type PayinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 返回码
	Msg        string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
	OutTradeNo string `protobuf:"bytes,3,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	TradeToken string `protobuf:"bytes,4,opt,name=tradeToken,proto3" json:"tradeToken,omitempty"`
	Status     int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PayinResponse) Reset() {
	*x = PayinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayinResponse) ProtoMessage() {}

func (x *PayinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayinResponse.ProtoReflect.Descriptor instead.
func (*PayinResponse) Descriptor() ([]byte, []int) {
	return file_payin_proto_rawDescGZIP(), []int{5}
}

func (x *PayinResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayinResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PayinResponse) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *PayinResponse) GetTradeToken() string {
	if x != nil {
		return x.TradeToken
	}
	return ""
}

func (x *PayinResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type PayinQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantNo int64  `protobuf:"varint,1,opt,name=merchantNo,proto3" json:"merchantNo,omitempty"`
	OutTradeNo string `protobuf:"bytes,2,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
}

func (x *PayinQueryRequest) Reset() {
	*x = PayinQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayinQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayinQueryRequest) ProtoMessage() {}

func (x *PayinQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayinQueryRequest.ProtoReflect.Descriptor instead.
func (*PayinQueryRequest) Descriptor() ([]byte, []int) {
	return file_payin_proto_rawDescGZIP(), []int{6}
}

func (x *PayinQueryRequest) GetMerchantNo() int64 {
	if x != nil {
		return x.MerchantNo
	}
	return 0
}

func (x *PayinQueryRequest) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

type PayinQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 返回码
	Msg   string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
	Payin *PayinOrder `protobuf:"bytes,3,opt,name=payin,proto3" json:"payin,omitempty"`
}

func (x *PayinQueryResponse) Reset() {
	*x = PayinQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayinQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayinQueryResponse) ProtoMessage() {}

func (x *PayinQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayinQueryResponse.ProtoReflect.Descriptor instead.
func (*PayinQueryResponse) Descriptor() ([]byte, []int) {
	return file_payin_proto_rawDescGZIP(), []int{7}
}

func (x *PayinQueryResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayinQueryResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PayinQueryResponse) GetPayin() *PayinOrder {
	if x != nil {
		return x.Payin
	}
	return nil
}

type PayinOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reference      string                       `protobuf:"bytes,1,opt,name=reference,proto3" json:"reference,omitempty"`
	Country        string                       `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	TotalAmount    string                       `protobuf:"bytes,3,opt,name=totalAmount,proto3" json:"totalAmount,omitempty"`
	OutTradeNo     string                       `protobuf:"bytes,4,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	Currency       string                       `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	ChannelNo      string                       `protobuf:"bytes,6,opt,name=channelNo,proto3" json:"channelNo,omitempty"`
	ThirdChannelNo string                       `protobuf:"bytes,7,opt,name=thirdChannelNo,proto3" json:"thirdChannelNo,omitempty"`
	PaymentCode    string                       `protobuf:"bytes,8,opt,name=paymentCode,proto3" json:"paymentCode,omitempty"`
	TradeToken     string                       `protobuf:"bytes,9,opt,name=tradeToken,proto3" json:"tradeToken,omitempty"`
	CompleteTime   string                       `protobuf:"bytes,10,opt,name=completeTime,proto3" json:"completeTime,omitempty"`
	PaymentDetails []*PayinOrder_Paymentdetails `protobuf:"bytes,11,rep,name=paymentDetails,proto3" json:"paymentDetails,omitempty"`
	Fees           *PayinOrder_Fees             `protobuf:"bytes,12,opt,name=fees,proto3" json:"fees,omitempty"`
	Status         string                       `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	ResultMsg      string                       `protobuf:"bytes,14,opt,name=resultMsg,proto3" json:"resultMsg,omitempty"`
}

func (x *PayinOrder) Reset() {
	*x = PayinOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayinOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayinOrder) ProtoMessage() {}

func (x *PayinOrder) ProtoReflect() protoreflect.Message {
	mi := &file_payin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayinOrder.ProtoReflect.Descriptor instead.
func (*PayinOrder) Descriptor() ([]byte, []int) {
	return file_payin_proto_rawDescGZIP(), []int{8}
}

func (x *PayinOrder) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *PayinOrder) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *PayinOrder) GetTotalAmount() string {
	if x != nil {
		return x.TotalAmount
	}
	return ""
}

func (x *PayinOrder) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *PayinOrder) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PayinOrder) GetChannelNo() string {
	if x != nil {
		return x.ChannelNo
	}
	return ""
}

func (x *PayinOrder) GetThirdChannelNo() string {
	if x != nil {
		return x.ThirdChannelNo
	}
	return ""
}

func (x *PayinOrder) GetPaymentCode() string {
	if x != nil {
		return x.PaymentCode
	}
	return ""
}

func (x *PayinOrder) GetTradeToken() string {
	if x != nil {
		return x.TradeToken
	}
	return ""
}

func (x *PayinOrder) GetCompleteTime() string {
	if x != nil {
		return x.CompleteTime
	}
	return ""
}

func (x *PayinOrder) GetPaymentDetails() []*PayinOrder_Paymentdetails {
	if x != nil {
		return x.PaymentDetails
	}
	return nil
}

func (x *PayinOrder) GetFees() *PayinOrder_Fees {
	if x != nil {
		return x.Fees
	}
	return nil
}

func (x *PayinOrder) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PayinOrder) GetResultMsg() string {
	if x != nil {
		return x.ResultMsg
	}
	return ""
}

type PayinQueryPageResponse_Items struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayinOrder []*PayinOrder `protobuf:"bytes,1,rep,name=payinOrder,proto3" json:"payinOrder,omitempty"`
}

func (x *PayinQueryPageResponse_Items) Reset() {
	*x = PayinQueryPageResponse_Items{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayinQueryPageResponse_Items) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayinQueryPageResponse_Items) ProtoMessage() {}

func (x *PayinQueryPageResponse_Items) ProtoReflect() protoreflect.Message {
	mi := &file_payin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayinQueryPageResponse_Items.ProtoReflect.Descriptor instead.
func (*PayinQueryPageResponse_Items) Descriptor() ([]byte, []int) {
	return file_payin_proto_rawDescGZIP(), []int{2, 0}
}

func (x *PayinQueryPageResponse_Items) GetPayinOrder() []*PayinOrder {
	if x != nil {
		return x.PayinOrder
	}
	return nil
}

type PayinRequest_Cardinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardIdentifierNo    string `protobuf:"bytes,1,opt,name=cardIdentifierNo,proto3" json:"cardIdentifierNo,omitempty"`
	CardHolderFullName  string `protobuf:"bytes,2,opt,name=cardHolderFullName,proto3" json:"cardHolderFullName,omitempty"`
	CardExpirationMonth string `protobuf:"bytes,3,opt,name=cardExpirationMonth,proto3" json:"cardExpirationMonth,omitempty"`
	CardExpirationYear  string `protobuf:"bytes,4,opt,name=cardExpirationYear,proto3" json:"cardExpirationYear,omitempty"`
	Cvv                 string `protobuf:"bytes,5,opt,name=cvv,proto3" json:"cvv,omitempty"`
}

func (x *PayinRequest_Cardinfo) Reset() {
	*x = PayinRequest_Cardinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayinRequest_Cardinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayinRequest_Cardinfo) ProtoMessage() {}

func (x *PayinRequest_Cardinfo) ProtoReflect() protoreflect.Message {
	mi := &file_payin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayinRequest_Cardinfo.ProtoReflect.Descriptor instead.
func (*PayinRequest_Cardinfo) Descriptor() ([]byte, []int) {
	return file_payin_proto_rawDescGZIP(), []int{3, 0}
}

func (x *PayinRequest_Cardinfo) GetCardIdentifierNo() string {
	if x != nil {
		return x.CardIdentifierNo
	}
	return ""
}

func (x *PayinRequest_Cardinfo) GetCardHolderFullName() string {
	if x != nil {
		return x.CardHolderFullName
	}
	return ""
}

func (x *PayinRequest_Cardinfo) GetCardExpirationMonth() string {
	if x != nil {
		return x.CardExpirationMonth
	}
	return ""
}

func (x *PayinRequest_Cardinfo) GetCardExpirationYear() string {
	if x != nil {
		return x.CardExpirationYear
	}
	return ""
}

func (x *PayinRequest_Cardinfo) GetCvv() string {
	if x != nil {
		return x.Cvv
	}
	return ""
}

type PayinRequest_Buyerinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName string `protobuf:"bytes,1,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName  string `protobuf:"bytes,2,opt,name=lastName,proto3" json:"lastName,omitempty"`
	PhoneNo   string `protobuf:"bytes,3,opt,name=phoneNo,proto3" json:"phoneNo,omitempty"`
	Email     string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	ClientIp  string `protobuf:"bytes,5,opt,name=clientIp,proto3" json:"clientIp,omitempty"`
	UserAgent string `protobuf:"bytes,6,opt,name=userAgent,proto3" json:"userAgent,omitempty"`
}

func (x *PayinRequest_Buyerinfo) Reset() {
	*x = PayinRequest_Buyerinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayinRequest_Buyerinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayinRequest_Buyerinfo) ProtoMessage() {}

func (x *PayinRequest_Buyerinfo) ProtoReflect() protoreflect.Message {
	mi := &file_payin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayinRequest_Buyerinfo.ProtoReflect.Descriptor instead.
func (*PayinRequest_Buyerinfo) Descriptor() ([]byte, []int) {
	return file_payin_proto_rawDescGZIP(), []int{3, 1}
}

func (x *PayinRequest_Buyerinfo) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *PayinRequest_Buyerinfo) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *PayinRequest_Buyerinfo) GetPhoneNo() string {
	if x != nil {
		return x.PhoneNo
	}
	return ""
}

func (x *PayinRequest_Buyerinfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PayinRequest_Buyerinfo) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *PayinRequest_Buyerinfo) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

type PayinRequest_Paymentdetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentMethodType string                  `protobuf:"bytes,1,opt,name=paymentMethodType,proto3" json:"paymentMethodType,omitempty"`
	TargetOrg         string                  `protobuf:"bytes,4,opt,name=TargetOrg,proto3" json:"TargetOrg,omitempty"`
	CardInfo          *PayinRequest_Cardinfo  `protobuf:"bytes,2,opt,name=cardInfo,proto3" json:"cardInfo,omitempty"`
	BuyerInfo         *PayinRequest_Buyerinfo `protobuf:"bytes,3,opt,name=buyerInfo,proto3" json:"buyerInfo,omitempty"`
}

func (x *PayinRequest_Paymentdetail) Reset() {
	*x = PayinRequest_Paymentdetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayinRequest_Paymentdetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayinRequest_Paymentdetail) ProtoMessage() {}

func (x *PayinRequest_Paymentdetail) ProtoReflect() protoreflect.Message {
	mi := &file_payin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayinRequest_Paymentdetail.ProtoReflect.Descriptor instead.
func (*PayinRequest_Paymentdetail) Descriptor() ([]byte, []int) {
	return file_payin_proto_rawDescGZIP(), []int{3, 2}
}

func (x *PayinRequest_Paymentdetail) GetPaymentMethodType() string {
	if x != nil {
		return x.PaymentMethodType
	}
	return ""
}

func (x *PayinRequest_Paymentdetail) GetTargetOrg() string {
	if x != nil {
		return x.TargetOrg
	}
	return ""
}

func (x *PayinRequest_Paymentdetail) GetCardInfo() *PayinRequest_Cardinfo {
	if x != nil {
		return x.CardInfo
	}
	return nil
}

func (x *PayinRequest_Paymentdetail) GetBuyerInfo() *PayinRequest_Buyerinfo {
	if x != nil {
		return x.BuyerInfo
	}
	return nil
}

type PayinRequest_Goodsdetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId       string `protobuf:"bytes,1,opt,name=goodsId,proto3" json:"goodsId,omitempty"`
	GoodsName     string `protobuf:"bytes,2,opt,name=goodsName,proto3" json:"goodsName,omitempty"`
	Quantity      string `protobuf:"bytes,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price         string `protobuf:"bytes,4,opt,name=price,proto3" json:"price,omitempty"`
	GoodsCurrency string `protobuf:"bytes,5,opt,name=goodsCurrency,proto3" json:"goodsCurrency,omitempty"`
	ShowUrl       string `protobuf:"bytes,6,opt,name=showUrl,proto3" json:"showUrl,omitempty"`
	GoodsCategory string `protobuf:"bytes,7,opt,name=goodsCategory,proto3" json:"goodsCategory,omitempty"`
}

func (x *PayinRequest_Goodsdetails) Reset() {
	*x = PayinRequest_Goodsdetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayinRequest_Goodsdetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayinRequest_Goodsdetails) ProtoMessage() {}

func (x *PayinRequest_Goodsdetails) ProtoReflect() protoreflect.Message {
	mi := &file_payin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayinRequest_Goodsdetails.ProtoReflect.Descriptor instead.
func (*PayinRequest_Goodsdetails) Descriptor() ([]byte, []int) {
	return file_payin_proto_rawDescGZIP(), []int{3, 3}
}

func (x *PayinRequest_Goodsdetails) GetGoodsId() string {
	if x != nil {
		return x.GoodsId
	}
	return ""
}

func (x *PayinRequest_Goodsdetails) GetGoodsName() string {
	if x != nil {
		return x.GoodsName
	}
	return ""
}

func (x *PayinRequest_Goodsdetails) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *PayinRequest_Goodsdetails) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *PayinRequest_Goodsdetails) GetGoodsCurrency() string {
	if x != nil {
		return x.GoodsCurrency
	}
	return ""
}

func (x *PayinRequest_Goodsdetails) GetShowUrl() string {
	if x != nil {
		return x.ShowUrl
	}
	return ""
}

func (x *PayinRequest_Goodsdetails) GetGoodsCategory() string {
	if x != nil {
		return x.GoodsCategory
	}
	return ""
}

type PayinRequest_Shippinginfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName string `protobuf:"bytes,1,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName  string `protobuf:"bytes,2,opt,name=lastName,proto3" json:"lastName,omitempty"`
	PhoneNo   string `protobuf:"bytes,3,opt,name=phoneNo,proto3" json:"phoneNo,omitempty"`
	Email     string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Address1  string `protobuf:"bytes,5,opt,name=address1,proto3" json:"address1,omitempty"`
	City      string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	Country   string `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
	ZipCode   string `protobuf:"bytes,8,opt,name=zipCode,proto3" json:"zipCode,omitempty"`
}

func (x *PayinRequest_Shippinginfo) Reset() {
	*x = PayinRequest_Shippinginfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayinRequest_Shippinginfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayinRequest_Shippinginfo) ProtoMessage() {}

func (x *PayinRequest_Shippinginfo) ProtoReflect() protoreflect.Message {
	mi := &file_payin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayinRequest_Shippinginfo.ProtoReflect.Descriptor instead.
func (*PayinRequest_Shippinginfo) Descriptor() ([]byte, []int) {
	return file_payin_proto_rawDescGZIP(), []int{3, 4}
}

func (x *PayinRequest_Shippinginfo) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *PayinRequest_Shippinginfo) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *PayinRequest_Shippinginfo) GetPhoneNo() string {
	if x != nil {
		return x.PhoneNo
	}
	return ""
}

func (x *PayinRequest_Shippinginfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PayinRequest_Shippinginfo) GetAddress1() string {
	if x != nil {
		return x.Address1
	}
	return ""
}

func (x *PayinRequest_Shippinginfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *PayinRequest_Shippinginfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *PayinRequest_Shippinginfo) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

type PayinRequest_Billinginfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName string `protobuf:"bytes,1,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName  string `protobuf:"bytes,2,opt,name=lastName,proto3" json:"lastName,omitempty"`
	PhoneNo   string `protobuf:"bytes,3,opt,name=phoneNo,proto3" json:"phoneNo,omitempty"`
	Email     string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Address1  string `protobuf:"bytes,5,opt,name=address1,proto3" json:"address1,omitempty"`
	City      string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	Country   string `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
	ZipCode   string `protobuf:"bytes,8,opt,name=zipCode,proto3" json:"zipCode,omitempty"`
}

func (x *PayinRequest_Billinginfo) Reset() {
	*x = PayinRequest_Billinginfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayinRequest_Billinginfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayinRequest_Billinginfo) ProtoMessage() {}

func (x *PayinRequest_Billinginfo) ProtoReflect() protoreflect.Message {
	mi := &file_payin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayinRequest_Billinginfo.ProtoReflect.Descriptor instead.
func (*PayinRequest_Billinginfo) Descriptor() ([]byte, []int) {
	return file_payin_proto_rawDescGZIP(), []int{3, 5}
}

func (x *PayinRequest_Billinginfo) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *PayinRequest_Billinginfo) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *PayinRequest_Billinginfo) GetPhoneNo() string {
	if x != nil {
		return x.PhoneNo
	}
	return ""
}

func (x *PayinRequest_Billinginfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PayinRequest_Billinginfo) GetAddress1() string {
	if x != nil {
		return x.Address1
	}
	return ""
}

func (x *PayinRequest_Billinginfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *PayinRequest_Billinginfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *PayinRequest_Billinginfo) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

type PayinRequest_Riskparams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegisterName string `protobuf:"bytes,1,opt,name=registerName,proto3" json:"registerName,omitempty"`
	RegTime      string `protobuf:"bytes,2,opt,name=regTime,proto3" json:"regTime,omitempty"`
	LiveCountry  string `protobuf:"bytes,3,opt,name=liveCountry,proto3" json:"liveCountry,omitempty"`
	PayerAccount string `protobuf:"bytes,4,opt,name=payerAccount,proto3" json:"payerAccount,omitempty"`
	PayerName    string `protobuf:"bytes,5,opt,name=payerName,proto3" json:"payerName,omitempty"`
	TaxId        string `protobuf:"bytes,6,opt,name=taxId,proto3" json:"taxId,omitempty"`
}

func (x *PayinRequest_Riskparams) Reset() {
	*x = PayinRequest_Riskparams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayinRequest_Riskparams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayinRequest_Riskparams) ProtoMessage() {}

func (x *PayinRequest_Riskparams) ProtoReflect() protoreflect.Message {
	mi := &file_payin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayinRequest_Riskparams.ProtoReflect.Descriptor instead.
func (*PayinRequest_Riskparams) Descriptor() ([]byte, []int) {
	return file_payin_proto_rawDescGZIP(), []int{3, 6}
}

func (x *PayinRequest_Riskparams) GetRegisterName() string {
	if x != nil {
		return x.RegisterName
	}
	return ""
}

func (x *PayinRequest_Riskparams) GetRegTime() string {
	if x != nil {
		return x.RegTime
	}
	return ""
}

func (x *PayinRequest_Riskparams) GetLiveCountry() string {
	if x != nil {
		return x.LiveCountry
	}
	return ""
}

func (x *PayinRequest_Riskparams) GetPayerAccount() string {
	if x != nil {
		return x.PayerAccount
	}
	return ""
}

func (x *PayinRequest_Riskparams) GetPayerName() string {
	if x != nil {
		return x.PayerName
	}
	return ""
}

func (x *PayinRequest_Riskparams) GetTaxId() string {
	if x != nil {
		return x.TaxId
	}
	return ""
}

type PayinRequest_Separateaccountinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParticipantId       string `protobuf:"bytes,1,opt,name=participantId,proto3" json:"participantId,omitempty"`
	SeparateAccountDesc string `protobuf:"bytes,2,opt,name=separateAccountDesc,proto3" json:"separateAccountDesc,omitempty"`
}

func (x *PayinRequest_Separateaccountinfo) Reset() {
	*x = PayinRequest_Separateaccountinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayinRequest_Separateaccountinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayinRequest_Separateaccountinfo) ProtoMessage() {}

func (x *PayinRequest_Separateaccountinfo) ProtoReflect() protoreflect.Message {
	mi := &file_payin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayinRequest_Separateaccountinfo.ProtoReflect.Descriptor instead.
func (*PayinRequest_Separateaccountinfo) Descriptor() ([]byte, []int) {
	return file_payin_proto_rawDescGZIP(), []int{3, 7}
}

func (x *PayinRequest_Separateaccountinfo) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

func (x *PayinRequest_Separateaccountinfo) GetSeparateAccountDesc() string {
	if x != nil {
		return x.SeparateAccountDesc
	}
	return ""
}

type PayinOrder_Cardinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardOrg            string `protobuf:"bytes,1,opt,name=cardOrg,proto3" json:"cardOrg,omitempty"`
	Country            string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	CardIdentifierNo   string `protobuf:"bytes,3,opt,name=cardIdentifierNo,proto3" json:"cardIdentifierNo,omitempty"`
	CardIdentifierName string `protobuf:"bytes,4,opt,name=cardIdentifierName,proto3" json:"cardIdentifierName,omitempty"`
}

func (x *PayinOrder_Cardinfo) Reset() {
	*x = PayinOrder_Cardinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayinOrder_Cardinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayinOrder_Cardinfo) ProtoMessage() {}

func (x *PayinOrder_Cardinfo) ProtoReflect() protoreflect.Message {
	mi := &file_payin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayinOrder_Cardinfo.ProtoReflect.Descriptor instead.
func (*PayinOrder_Cardinfo) Descriptor() ([]byte, []int) {
	return file_payin_proto_rawDescGZIP(), []int{8, 0}
}

func (x *PayinOrder_Cardinfo) GetCardOrg() string {
	if x != nil {
		return x.CardOrg
	}
	return ""
}

func (x *PayinOrder_Cardinfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *PayinOrder_Cardinfo) GetCardIdentifierNo() string {
	if x != nil {
		return x.CardIdentifierNo
	}
	return ""
}

func (x *PayinOrder_Cardinfo) GetCardIdentifierName() string {
	if x != nil {
		return x.CardIdentifierName
	}
	return ""
}

type PayinOrder_Paymentdetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetOrg         string               `protobuf:"bytes,1,opt,name=targetOrg,proto3" json:"targetOrg,omitempty"`
	CardInfo          *PayinOrder_Cardinfo `protobuf:"bytes,2,opt,name=cardInfo,proto3" json:"cardInfo,omitempty"`
	PayAmount         string               `protobuf:"bytes,3,opt,name=payAmount,proto3" json:"payAmount,omitempty"`
	ExchangeRate      string               `protobuf:"bytes,4,opt,name=exchangeRate,proto3" json:"exchangeRate,omitempty"`
	PaymentMethod     string               `protobuf:"bytes,5,opt,name=paymentMethod,proto3" json:"paymentMethod,omitempty"`
	PayCurrency       string               `protobuf:"bytes,6,opt,name=payCurrency,proto3" json:"payCurrency,omitempty"`
	PaymentMethodType string               `protobuf:"bytes,7,opt,name=paymentMethodType,proto3" json:"paymentMethodType,omitempty"`
}

func (x *PayinOrder_Paymentdetails) Reset() {
	*x = PayinOrder_Paymentdetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayinOrder_Paymentdetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayinOrder_Paymentdetails) ProtoMessage() {}

func (x *PayinOrder_Paymentdetails) ProtoReflect() protoreflect.Message {
	mi := &file_payin_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayinOrder_Paymentdetails.ProtoReflect.Descriptor instead.
func (*PayinOrder_Paymentdetails) Descriptor() ([]byte, []int) {
	return file_payin_proto_rawDescGZIP(), []int{8, 1}
}

func (x *PayinOrder_Paymentdetails) GetTargetOrg() string {
	if x != nil {
		return x.TargetOrg
	}
	return ""
}

func (x *PayinOrder_Paymentdetails) GetCardInfo() *PayinOrder_Cardinfo {
	if x != nil {
		return x.CardInfo
	}
	return nil
}

func (x *PayinOrder_Paymentdetails) GetPayAmount() string {
	if x != nil {
		return x.PayAmount
	}
	return ""
}

func (x *PayinOrder_Paymentdetails) GetExchangeRate() string {
	if x != nil {
		return x.ExchangeRate
	}
	return ""
}

func (x *PayinOrder_Paymentdetails) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

func (x *PayinOrder_Paymentdetails) GetPayCurrency() string {
	if x != nil {
		return x.PayCurrency
	}
	return ""
}

func (x *PayinOrder_Paymentdetails) GetPaymentMethodType() string {
	if x != nil {
		return x.PaymentMethodType
	}
	return ""
}

type PayinOrder_Merfee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url      string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Amount   string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency string `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *PayinOrder_Merfee) Reset() {
	*x = PayinOrder_Merfee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payin_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayinOrder_Merfee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayinOrder_Merfee) ProtoMessage() {}

func (x *PayinOrder_Merfee) ProtoReflect() protoreflect.Message {
	mi := &file_payin_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayinOrder_Merfee.ProtoReflect.Descriptor instead.
func (*PayinOrder_Merfee) Descriptor() ([]byte, []int) {
	return file_payin_proto_rawDescGZIP(), []int{8, 2}
}

func (x *PayinOrder_Merfee) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PayinOrder_Merfee) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *PayinOrder_Merfee) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type PayinOrder_Fees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerFee *PayinOrder_Merfee `protobuf:"bytes,1,opt,name=merFee,proto3" json:"merFee,omitempty"`
}

func (x *PayinOrder_Fees) Reset() {
	*x = PayinOrder_Fees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payin_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayinOrder_Fees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayinOrder_Fees) ProtoMessage() {}

func (x *PayinOrder_Fees) ProtoReflect() protoreflect.Message {
	mi := &file_payin_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayinOrder_Fees.ProtoReflect.Descriptor instead.
func (*PayinOrder_Fees) Descriptor() ([]byte, []int) {
	return file_payin_proto_rawDescGZIP(), []int{8, 3}
}

func (x *PayinOrder_Fees) GetMerFee() *PayinOrder_Merfee {
	if x != nil {
		return x.MerFee
	}
	return nil
}

var File_payin_proto protoreflect.FileDescriptor

var file_payin_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x22, 0x95, 0x03, 0x0a, 0x15, 0x50,
	0x61, 0x79, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x65, 0x67, 0x69,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x65, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x65, 0x67, 0x69,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x65, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x64, 0x22, 0x74, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x93, 0x02, 0x0a, 0x16, 0x50, 0x61, 0x79,
	0x69, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x2e,
	0x50, 0x61, 0x79, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x70, 0x61, 0x79, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x40, 0x0a, 0x05,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x69, 0x6e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xd9,
	0x13, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x6f, 0x12,
	0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x79,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x4a, 0x0a, 0x0c, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x0c, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x4a, 0x0a, 0x0c, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x69, 0x6e, 0x66, 0x6f,
	0x52, 0x0c, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x47,
	0x0a, 0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x69,
	0x6e, 0x2e, 0x50, 0x61, 0x79, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a, 0x0a, 0x72, 0x69, 0x73, 0x6b, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x0a, 0x72, 0x69, 0x73, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x55, 0x72, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x5f, 0x0a, 0x13, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x14, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x69, 0x6e,
	0x2e, 0x50, 0x61, 0x79, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65,
	0x70, 0x61, 0x72, 0x61, 0x74, 0x65, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x66,
	0x6f, 0x52, 0x13, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xda, 0x01, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4e, 0x6f, 0x12,
	0x2e, 0x0a, 0x12, 0x63, 0x61, 0x72, 0x64, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x46, 0x75, 0x6c,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x61, 0x72,
	0x64, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x30, 0x0a, 0x13, 0x63, 0x61, 0x72, 0x64, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x61,
	0x72, 0x64, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x74,
	0x68, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x61, 0x72, 0x64, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63,
	0x61, 0x72, 0x64, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x76, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x63, 0x76, 0x76, 0x1a, 0xaf, 0x01, 0x0a, 0x09, 0x42, 0x75, 0x79, 0x65, 0x72, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x1a, 0xde, 0x01, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4f,
	0x72, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x4f, 0x72, 0x67, 0x12, 0x3e, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61,
	0x79, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70,
	0x61, 0x79, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x42, 0x75, 0x79, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x62, 0x75, 0x79,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xde, 0x01, 0x0a, 0x0c, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x77, 0x55,
	0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x6f, 0x77, 0x55, 0x72,
	0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x1a, 0xdc, 0x01, 0x0a, 0x0c, 0x53, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x7a,
	0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0xdb, 0x01, 0x0a, 0x0b, 0x42, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x7a, 0x69,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x1a, 0xc4, 0x01, 0x0a, 0x0a, 0x52, 0x69, 0x73, 0x6b, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x67, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x78, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x78, 0x49, 0x64, 0x1a, 0x6d, 0x0a, 0x13, 0x53,
	0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x65, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x65, 0x70, 0x61,
	0x72, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x22, 0x34, 0x0a, 0x0c, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x8d, 0x01, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x53, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x4e, 0x6f, 0x22, 0x69, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x69, 0x6e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x2d, 0x0a, 0x05, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x2e, 0x50,
	0x61, 0x79, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x79, 0x69, 0x6e,
	0x22, 0xda, 0x08, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f,
	0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4e, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x4e, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x69, 0x6e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x30, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x2e, 0x50, 0x61,
	0x79, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x46, 0x65, 0x65, 0x73, 0x52, 0x04, 0x66,
	0x65, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x73, 0x67, 0x1a, 0x9a, 0x01, 0x0a, 0x08, 0x43, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x4f, 0x72,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xa4, 0x02, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x12, 0x3c, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x69, 0x6e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x61, 0x72,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x61, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x2c, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x4e, 0x0a,
	0x06, 0x4d, 0x65, 0x72, 0x66, 0x65, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x1a, 0x3e, 0x0a,
	0x04, 0x46, 0x65, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x06, 0x6d, 0x65, 0x72, 0x46, 0x65, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61,
	0x79, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4d,
	0x65, 0x72, 0x66, 0x65, 0x65, 0x52, 0x06, 0x6d, 0x65, 0x72, 0x46, 0x65, 0x65, 0x32, 0xfd, 0x01,
	0x0a, 0x05, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x12, 0x46, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x41, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x12, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70,
	0x61, 0x79, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x2e,
	0x50, 0x61, 0x79, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4f, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1e, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x69,
	0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x69,
	0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5b, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x22, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x69, 0x6e,
	0x2e, 0x50, 0x61, 0x79, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70,
	0x61, 0x79, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0a, 0x5a,
	0x08, 0x2e, 0x2e, 0x2f, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_payin_proto_rawDescOnce sync.Once
	file_payin_proto_rawDescData = file_payin_proto_rawDesc
)

func file_payin_proto_rawDescGZIP() []byte {
	file_payin_proto_rawDescOnce.Do(func() {
		file_payin_proto_rawDescData = protoimpl.X.CompressGZIP(file_payin_proto_rawDescData)
	})
	return file_payin_proto_rawDescData
}

var file_payin_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_payin_proto_goTypes = []interface{}{
	(*PayinQueryPageRequest)(nil),            // 0: order.payin.PayinQueryPageRequest
	(*Pagination)(nil),                       // 1: order.payin.Pagination
	(*PayinQueryPageResponse)(nil),           // 2: order.payin.PayinQueryPageResponse
	(*PayinRequest)(nil),                     // 3: order.payin.PayinRequest
	(*BaseResponse)(nil),                     // 4: order.payin.BaseResponse
	(*PayinResponse)(nil),                    // 5: order.payin.PayinResponse
	(*PayinQueryRequest)(nil),                // 6: order.payin.PayinQueryRequest
	(*PayinQueryResponse)(nil),               // 7: order.payin.PayinQueryResponse
	(*PayinOrder)(nil),                       // 8: order.payin.PayinOrder
	(*PayinQueryPageResponse_Items)(nil),     // 9: order.payin.PayinQueryPageResponse.Items
	(*PayinRequest_Cardinfo)(nil),            // 10: order.payin.PayinRequest.Cardinfo
	(*PayinRequest_Buyerinfo)(nil),           // 11: order.payin.PayinRequest.Buyerinfo
	(*PayinRequest_Paymentdetail)(nil),       // 12: order.payin.PayinRequest.Paymentdetail
	(*PayinRequest_Goodsdetails)(nil),        // 13: order.payin.PayinRequest.Goodsdetails
	(*PayinRequest_Shippinginfo)(nil),        // 14: order.payin.PayinRequest.Shippinginfo
	(*PayinRequest_Billinginfo)(nil),         // 15: order.payin.PayinRequest.Billinginfo
	(*PayinRequest_Riskparams)(nil),          // 16: order.payin.PayinRequest.Riskparams
	(*PayinRequest_Separateaccountinfo)(nil), // 17: order.payin.PayinRequest.Separateaccountinfo
	(*PayinOrder_Cardinfo)(nil),              // 18: order.payin.PayinOrder.Cardinfo
	(*PayinOrder_Paymentdetails)(nil),        // 19: order.payin.PayinOrder.Paymentdetails
	(*PayinOrder_Merfee)(nil),                // 20: order.payin.PayinOrder.Merfee
	(*PayinOrder_Fees)(nil),                  // 21: order.payin.PayinOrder.Fees
}
var file_payin_proto_depIdxs = []int32{
	4,  // 0: order.payin.PayinQueryPageResponse.baseResponse:type_name -> order.payin.BaseResponse
	9,  // 1: order.payin.PayinQueryPageResponse.items:type_name -> order.payin.PayinQueryPageResponse.Items
	1,  // 2: order.payin.PayinQueryPageResponse.pagination:type_name -> order.payin.Pagination
	12, // 3: order.payin.PayinRequest.paymentDetail:type_name -> order.payin.PayinRequest.Paymentdetail
	13, // 4: order.payin.PayinRequest.goodsDetails:type_name -> order.payin.PayinRequest.Goodsdetails
	14, // 5: order.payin.PayinRequest.shippingInfo:type_name -> order.payin.PayinRequest.Shippinginfo
	15, // 6: order.payin.PayinRequest.billingInfo:type_name -> order.payin.PayinRequest.Billinginfo
	16, // 7: order.payin.PayinRequest.riskParams:type_name -> order.payin.PayinRequest.Riskparams
	17, // 8: order.payin.PayinRequest.separateAccountInfo:type_name -> order.payin.PayinRequest.Separateaccountinfo
	8,  // 9: order.payin.PayinQueryResponse.payin:type_name -> order.payin.PayinOrder
	19, // 10: order.payin.PayinOrder.paymentDetails:type_name -> order.payin.PayinOrder.Paymentdetails
	21, // 11: order.payin.PayinOrder.fees:type_name -> order.payin.PayinOrder.Fees
	8,  // 12: order.payin.PayinQueryPageResponse.Items.payinOrder:type_name -> order.payin.PayinOrder
	10, // 13: order.payin.PayinRequest.Paymentdetail.cardInfo:type_name -> order.payin.PayinRequest.Cardinfo
	11, // 14: order.payin.PayinRequest.Paymentdetail.buyerInfo:type_name -> order.payin.PayinRequest.Buyerinfo
	18, // 15: order.payin.PayinOrder.Paymentdetails.cardInfo:type_name -> order.payin.PayinOrder.Cardinfo
	20, // 16: order.payin.PayinOrder.Fees.merFee:type_name -> order.payin.PayinOrder.Merfee
	3,  // 17: order.payin.payin.OrderAndPay:input_type -> order.payin.PayinRequest
	6,  // 18: order.payin.payin.OrderQuery:input_type -> order.payin.PayinQueryRequest
	0,  // 19: order.payin.payin.OrderQueryPage:input_type -> order.payin.PayinQueryPageRequest
	5,  // 20: order.payin.payin.OrderAndPay:output_type -> order.payin.PayinResponse
	7,  // 21: order.payin.payin.OrderQuery:output_type -> order.payin.PayinQueryResponse
	2,  // 22: order.payin.payin.OrderQueryPage:output_type -> order.payin.PayinQueryPageResponse
	20, // [20:23] is the sub-list for method output_type
	17, // [17:20] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_payin_proto_init() }
func file_payin_proto_init() {
	if File_payin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_payin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayinQueryPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayinQueryPageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayinQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayinQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayinOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayinQueryPageResponse_Items); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayinRequest_Cardinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayinRequest_Buyerinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayinRequest_Paymentdetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayinRequest_Goodsdetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayinRequest_Shippinginfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayinRequest_Billinginfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayinRequest_Riskparams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayinRequest_Separateaccountinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayinOrder_Cardinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayinOrder_Paymentdetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payin_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayinOrder_Merfee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payin_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayinOrder_Fees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_payin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_payin_proto_goTypes,
		DependencyIndexes: file_payin_proto_depIdxs,
		MessageInfos:      file_payin_proto_msgTypes,
	}.Build()
	File_payin_proto = out.File
	file_payin_proto_rawDesc = nil
	file_payin_proto_goTypes = nil
	file_payin_proto_depIdxs = nil
}
