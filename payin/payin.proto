syntax = "proto3";

package order.payin;

option go_package = "../payin";

service payin {
  // 新增 收单
  rpc OrderAndPay(PayinRequest) returns (PayinResponse) {}
  rpc OrderQuery(PayinQueryRequest) returns (PayinQueryResponse) {}
}

message PayinRequest {

  message Cardinfo {
    string cardIdentifierNo = 1;
    string cardHolderFullName = 2;
    string cardExpirationMonth = 3;
    string cardExpirationYear = 4;
    string cvv = 5;
  }

  message Buyerinfo {
    string firstName = 1;
    string lastName = 2;
    string phoneNo = 3;
    string email = 4;
    string clientIp = 5;
    string userAgent = 6;
  }

  message Paymentdetail {
    string paymentMethodType = 1;
    Cardinfo cardInfo = 2;
    Buyerinfo buyerInfo = 3;
  }

  message Goodsdetails {
    string goodsId = 1;
    string goodsName = 2;
    string quantity = 3;
    string price = 4;
    string goodsCurrency = 5;
    string showUrl = 6;
    string goodsCategory = 7;
  }

  message Shippinginfo {
    string firstName = 1;
    string lastName = 2;
    string phoneNo = 3;
    string email = 4;
    string address1 = 5;
    string city = 6;
    string country = 7;
    string zipCode = 8;
  }

  message Billinginfo {
    string firstName = 1;
    string lastName = 2;
    string phoneNo = 3;
    string email = 4;
    string address1 = 5;
    string city = 6;
    string country = 7;
    string zipCode = 8;
  }

  message Riskparams {
    string registerName = 1;
    string regTime = 2;
    string liveCountry = 3;
    string payerAccount = 4;
    string payerName = 5;
    string taxId = 6;
  }

  message Separateaccountinfo {
    string participantId = 1;
    string separateAccountDesc = 2;
  }

  string merchantNo = 1;
  string outTradeNo = 2;
  string subject = 3;
  uint32 totalAmount = 4;
  string currency = 5;
  string country = 6;
  string userId = 7;
  string integrate = 8;
  string expireTime = 9;
  Paymentdetail paymentDetail = 10;
  repeated Goodsdetails goodsDetails = 11;
  Shippinginfo shippingInfo = 12;
  Billinginfo billingInfo = 13;
  Riskparams riskParams = 14;
  string language = 15;
  string reference = 16;
  string terminalType = 17;
  string frontCallbackUrl = 18;
  string notifyUrl = 19;
  repeated Separateaccountinfo separateAccountInfo = 20;
}

message BaseResponse {
  int32 code = 1; // 返回码
  string msg = 2; // 错误信息
}

message PayinResponse {
  BaseResponse baseResponse = 1;
  string outTradeNo = 2;
  string tradeToken = 3;
  int32 status = 4;
}

message PayinQueryRequest {
  string merchantNo = 1;
  string outTradeNo = 2;
}

message PayinQueryResponse {
  BaseResponse baseResponse = 1;
  PayinOrder payin = 2;
}

message PayinOrder {

  message Cardinfo {
    string cardOrg = 1;
    string country = 2;
    string cardIdentifierNo = 3;
    string cardIdentifierName = 4;
  }

  message Paymentdetails {
    string targetOrg = 1;
    Cardinfo cardInfo = 2;
    uint32 payAmount = 3;
    string exchangeRate = 4;
    string paymentMethod = 5;
    string payCurrency = 6;
    string paymentMethodType = 7;
  }

  message Merfee {
    string url = 1;
    string amount = 2;
    string currency = 3;
  }

  message Fees { Merfee merFee = 1; }

  string reference = 1;
  string country = 2;
  uint32 totalAmount = 3;
  string outTradeNo = 4;
  string currency = 5;
  string channelNo = 6;
  string thirdChannelNo = 7;
  string paymentCode = 8;
  string tradeToken = 9;
  string completeTime = 10;
  repeated Paymentdetails paymentDetails = 11;
  Fees fees = 12;
  string status = 13;
  string resultMsg = 14;
}