// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.17.3
// source: payout.proto

package payout

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PayoutQueryPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page          int32   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32   `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderStatuses []int32 `protobuf:"varint,3,rep,packed,name=orderStatuses,proto3" json:"orderStatuses,omitempty"` // [0, 1, 2] 数组格式
	MerchantNo    string  `protobuf:"bytes,4,opt,name=merchantNo,proto3" json:"merchantNo,omitempty"`
	OutTradeNo    string  `protobuf:"bytes,5,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	UserId        int64   `protobuf:"varint,6,opt,name=userId,proto3" json:"userId,omitempty"`   // 商户下的用户id
	OrderId       int64   `protobuf:"varint,7,opt,name=orderId,proto3" json:"orderId,omitempty"` // 订单ID
	CreateBegin   int64   `protobuf:"varint,8,opt,name=createBegin,proto3" json:"createBegin,omitempty"`
	CreateEnd     int64   `protobuf:"varint,9,opt,name=createEnd,proto3" json:"createEnd,omitempty"`
	UpdateBegin   int64   `protobuf:"varint,10,opt,name=updateBegin,proto3" json:"updateBegin,omitempty"`
	UpdateEnd     int64   `protobuf:"varint,11,opt,name=updateEnd,proto3" json:"updateEnd,omitempty"`
}

func (x *PayoutQueryPageRequest) Reset() {
	*x = PayoutQueryPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payout_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutQueryPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutQueryPageRequest) ProtoMessage() {}

func (x *PayoutQueryPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payout_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutQueryPageRequest.ProtoReflect.Descriptor instead.
func (*PayoutQueryPageRequest) Descriptor() ([]byte, []int) {
	return file_payout_proto_rawDescGZIP(), []int{0}
}

func (x *PayoutQueryPageRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PayoutQueryPageRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PayoutQueryPageRequest) GetOrderStatuses() []int32 {
	if x != nil {
		return x.OrderStatuses
	}
	return nil
}

func (x *PayoutQueryPageRequest) GetMerchantNo() string {
	if x != nil {
		return x.MerchantNo
	}
	return ""
}

func (x *PayoutQueryPageRequest) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *PayoutQueryPageRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PayoutQueryPageRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *PayoutQueryPageRequest) GetCreateBegin() int64 {
	if x != nil {
		return x.CreateBegin
	}
	return 0
}

func (x *PayoutQueryPageRequest) GetCreateEnd() int64 {
	if x != nil {
		return x.CreateEnd
	}
	return 0
}

func (x *PayoutQueryPageRequest) GetUpdateBegin() int64 {
	if x != nil {
		return x.UpdateBegin
	}
	return 0
}

func (x *PayoutQueryPageRequest) GetUpdateEnd() int64 {
	if x != nil {
		return x.UpdateEnd
	}
	return 0
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize    int32 `protobuf:"varint,1,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Page        int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	CurrentPage int32 `protobuf:"varint,3,opt,name=currentPage,proto3" json:"currentPage,omitempty"`
	Total       int32 `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payout_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_payout_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_payout_proto_rawDescGZIP(), []int{1}
}

func (x *Pagination) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *Pagination) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetCurrentPage() int32 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *Pagination) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type PayoutQueryPageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       int32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 返回码
	Msg        string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
	Items      []*PayoutOrder `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Pagination *Pagination    `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *PayoutQueryPageResponse) Reset() {
	*x = PayoutQueryPageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payout_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutQueryPageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutQueryPageResponse) ProtoMessage() {}

func (x *PayoutQueryPageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payout_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutQueryPageResponse.ProtoReflect.Descriptor instead.
func (*PayoutQueryPageResponse) Descriptor() ([]byte, []int) {
	return file_payout_proto_rawDescGZIP(), []int{2}
}

func (x *PayoutQueryPageResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayoutQueryPageResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PayoutQueryPageResponse) GetItems() []*PayoutOrder {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *PayoutQueryPageResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type PayoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantNo          string                    `protobuf:"bytes,17,opt,name=merchantNo,proto3" json:"merchantNo,omitempty"`
	OutTradeNo          string                    `protobuf:"bytes,1,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	Country             string                    `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	SourceAccount       string                    `protobuf:"bytes,3,opt,name=sourceAccount,proto3" json:"sourceAccount,omitempty"`
	DestinationCurrency string                    `protobuf:"bytes,4,opt,name=destinationCurrency,proto3" json:"destinationCurrency,omitempty"`
	UserId              string                    `protobuf:"bytes,5,opt,name=userId,proto3" json:"userId,omitempty"`
	RiskParams          *PayoutRequest_Riskparams `protobuf:"bytes,6,opt,name=riskParams,proto3" json:"riskParams,omitempty"`
	Trade               *PayoutRequest_Trade      `protobuf:"bytes,7,opt,name=trade,proto3" json:"trade,omitempty"`
	PayeeInfo           *PayoutRequest_Payeeinfo  `protobuf:"bytes,8,opt,name=payeeInfo,proto3" json:"payeeInfo,omitempty"`
	PayerInfo           *PayoutRequest_Payerinfo  `protobuf:"bytes,9,opt,name=payerInfo,proto3" json:"payerInfo,omitempty"`
	ExpiryDays          string                    `protobuf:"bytes,10,opt,name=expiryDays,proto3" json:"expiryDays,omitempty"`
	Remark              string                    `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`
	Reference           string                    `protobuf:"bytes,12,opt,name=reference,proto3" json:"reference,omitempty"`
	NotifyUrl           string                    `protobuf:"bytes,13,opt,name=notifyUrl,proto3" json:"notifyUrl,omitempty"`
	NotifyEmail         string                    `protobuf:"bytes,14,opt,name=notifyEmail,proto3" json:"notifyEmail,omitempty"`
	NotifyPhone         string                    `protobuf:"bytes,15,opt,name=notifyPhone,proto3" json:"notifyPhone,omitempty"`
	Purpose             string                    `protobuf:"bytes,16,opt,name=purpose,proto3" json:"purpose,omitempty"`
}

func (x *PayoutRequest) Reset() {
	*x = PayoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payout_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutRequest) ProtoMessage() {}

func (x *PayoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payout_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutRequest.ProtoReflect.Descriptor instead.
func (*PayoutRequest) Descriptor() ([]byte, []int) {
	return file_payout_proto_rawDescGZIP(), []int{3}
}

func (x *PayoutRequest) GetMerchantNo() string {
	if x != nil {
		return x.MerchantNo
	}
	return ""
}

func (x *PayoutRequest) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *PayoutRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *PayoutRequest) GetSourceAccount() string {
	if x != nil {
		return x.SourceAccount
	}
	return ""
}

func (x *PayoutRequest) GetDestinationCurrency() string {
	if x != nil {
		return x.DestinationCurrency
	}
	return ""
}

func (x *PayoutRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PayoutRequest) GetRiskParams() *PayoutRequest_Riskparams {
	if x != nil {
		return x.RiskParams
	}
	return nil
}

func (x *PayoutRequest) GetTrade() *PayoutRequest_Trade {
	if x != nil {
		return x.Trade
	}
	return nil
}

func (x *PayoutRequest) GetPayeeInfo() *PayoutRequest_Payeeinfo {
	if x != nil {
		return x.PayeeInfo
	}
	return nil
}

func (x *PayoutRequest) GetPayerInfo() *PayoutRequest_Payerinfo {
	if x != nil {
		return x.PayerInfo
	}
	return nil
}

func (x *PayoutRequest) GetExpiryDays() string {
	if x != nil {
		return x.ExpiryDays
	}
	return ""
}

func (x *PayoutRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *PayoutRequest) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *PayoutRequest) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *PayoutRequest) GetNotifyEmail() string {
	if x != nil {
		return x.NotifyEmail
	}
	return ""
}

func (x *PayoutRequest) GetNotifyPhone() string {
	if x != nil {
		return x.NotifyPhone
	}
	return ""
}

func (x *PayoutRequest) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

type BaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 返回码
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
}

func (x *BaseResponse) Reset() {
	*x = BaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payout_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResponse) ProtoMessage() {}

func (x *BaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payout_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResponse.ProtoReflect.Descriptor instead.
func (*BaseResponse) Descriptor() ([]byte, []int) {
	return file_payout_proto_rawDescGZIP(), []int{4}
}

func (x *BaseResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BaseResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type PayoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 返回码
	Msg        string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
	OutTradeNo string `protobuf:"bytes,3,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	TradeToken string `protobuf:"bytes,4,opt,name=tradeToken,proto3" json:"tradeToken,omitempty"`
	Status     int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PayoutResponse) Reset() {
	*x = PayoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payout_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutResponse) ProtoMessage() {}

func (x *PayoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payout_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutResponse.ProtoReflect.Descriptor instead.
func (*PayoutResponse) Descriptor() ([]byte, []int) {
	return file_payout_proto_rawDescGZIP(), []int{5}
}

func (x *PayoutResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayoutResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PayoutResponse) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *PayoutResponse) GetTradeToken() string {
	if x != nil {
		return x.TradeToken
	}
	return ""
}

func (x *PayoutResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type PayoutQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantNo int64  `protobuf:"varint,1,opt,name=merchantNo,proto3" json:"merchantNo,omitempty"`
	OutTradeNo string `protobuf:"bytes,2,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
}

func (x *PayoutQueryRequest) Reset() {
	*x = PayoutQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payout_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutQueryRequest) ProtoMessage() {}

func (x *PayoutQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payout_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutQueryRequest.ProtoReflect.Descriptor instead.
func (*PayoutQueryRequest) Descriptor() ([]byte, []int) {
	return file_payout_proto_rawDescGZIP(), []int{6}
}

func (x *PayoutQueryRequest) GetMerchantNo() int64 {
	if x != nil {
		return x.MerchantNo
	}
	return 0
}

func (x *PayoutQueryRequest) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

type PayoutQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   int32        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 返回码
	Msg    string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
	Payout *PayoutOrder `protobuf:"bytes,3,opt,name=Payout,proto3" json:"Payout,omitempty"`
}

func (x *PayoutQueryResponse) Reset() {
	*x = PayoutQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payout_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutQueryResponse) ProtoMessage() {}

func (x *PayoutQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payout_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutQueryResponse.ProtoReflect.Descriptor instead.
func (*PayoutQueryResponse) Descriptor() ([]byte, []int) {
	return file_payout_proto_rawDescGZIP(), []int{7}
}

func (x *PayoutQueryResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayoutQueryResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PayoutQueryResponse) GetPayout() *PayoutOrder {
	if x != nil {
		return x.Payout
	}
	return nil
}

type PayoutOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutTradeNo           string                            `protobuf:"bytes,1,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	TradeNo              string                            `protobuf:"bytes,2,opt,name=tradeNo,proto3" json:"tradeNo,omitempty"`
	Status               string                            `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	FundsFreezeTime      string                            `protobuf:"bytes,4,opt,name=fundsFreezeTime,proto3" json:"fundsFreezeTime,omitempty"`
	FundsReturnTime      string                            `protobuf:"bytes,5,opt,name=fundsReturnTime,proto3" json:"fundsReturnTime,omitempty"`
	NotifyEmail          string                            `protobuf:"bytes,6,opt,name=notifyEmail,proto3" json:"notifyEmail,omitempty"`
	NotifyPhone          string                            `protobuf:"bytes,7,opt,name=notifyPhone,proto3" json:"notifyPhone,omitempty"`
	ResponseCode         string                            `protobuf:"bytes,8,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMsg          string                            `protobuf:"bytes,9,opt,name=responseMsg,proto3" json:"responseMsg,omitempty"`
	Reference            string                            `protobuf:"bytes,10,opt,name=reference,proto3" json:"reference,omitempty"`
	RedeemCode           string                            `protobuf:"bytes,11,opt,name=redeemCode,proto3" json:"redeemCode,omitempty"`
	ExpiryTime           string                            `protobuf:"bytes,12,opt,name=expiryTime,proto3" json:"expiryTime,omitempty"`
	BounceBackTime       string                            `protobuf:"bytes,13,opt,name=bounceBackTime,proto3" json:"bounceBackTime,omitempty"`
	TransactionUtcTime   string                            `protobuf:"bytes,14,opt,name=transactionUtcTime,proto3" json:"transactionUtcTime,omitempty"`
	PayFinishTime        string                            `protobuf:"bytes,15,opt,name=payFinishTime,proto3" json:"payFinishTime,omitempty"`
	Trade                *PayoutOrder_Trade                `protobuf:"bytes,16,opt,name=trade,proto3" json:"trade,omitempty"`
	Destination          *PayoutOrder_Destination          `protobuf:"bytes,17,opt,name=destination,proto3" json:"destination,omitempty"`
	Source               *PayoutOrder_Source               `protobuf:"bytes,18,opt,name=source,proto3" json:"source,omitempty"`
	AdditionalIdentifier *PayoutOrder_Additionalidentifier `protobuf:"bytes,19,opt,name=additionalIdentifier,proto3" json:"additionalIdentifier,omitempty"`
}

func (x *PayoutOrder) Reset() {
	*x = PayoutOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payout_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutOrder) ProtoMessage() {}

func (x *PayoutOrder) ProtoReflect() protoreflect.Message {
	mi := &file_payout_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutOrder.ProtoReflect.Descriptor instead.
func (*PayoutOrder) Descriptor() ([]byte, []int) {
	return file_payout_proto_rawDescGZIP(), []int{8}
}

func (x *PayoutOrder) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *PayoutOrder) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *PayoutOrder) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PayoutOrder) GetFundsFreezeTime() string {
	if x != nil {
		return x.FundsFreezeTime
	}
	return ""
}

func (x *PayoutOrder) GetFundsReturnTime() string {
	if x != nil {
		return x.FundsReturnTime
	}
	return ""
}

func (x *PayoutOrder) GetNotifyEmail() string {
	if x != nil {
		return x.NotifyEmail
	}
	return ""
}

func (x *PayoutOrder) GetNotifyPhone() string {
	if x != nil {
		return x.NotifyPhone
	}
	return ""
}

func (x *PayoutOrder) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *PayoutOrder) GetResponseMsg() string {
	if x != nil {
		return x.ResponseMsg
	}
	return ""
}

func (x *PayoutOrder) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *PayoutOrder) GetRedeemCode() string {
	if x != nil {
		return x.RedeemCode
	}
	return ""
}

func (x *PayoutOrder) GetExpiryTime() string {
	if x != nil {
		return x.ExpiryTime
	}
	return ""
}

func (x *PayoutOrder) GetBounceBackTime() string {
	if x != nil {
		return x.BounceBackTime
	}
	return ""
}

func (x *PayoutOrder) GetTransactionUtcTime() string {
	if x != nil {
		return x.TransactionUtcTime
	}
	return ""
}

func (x *PayoutOrder) GetPayFinishTime() string {
	if x != nil {
		return x.PayFinishTime
	}
	return ""
}

func (x *PayoutOrder) GetTrade() *PayoutOrder_Trade {
	if x != nil {
		return x.Trade
	}
	return nil
}

func (x *PayoutOrder) GetDestination() *PayoutOrder_Destination {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *PayoutOrder) GetSource() *PayoutOrder_Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *PayoutOrder) GetAdditionalIdentifier() *PayoutOrder_Additionalidentifier {
	if x != nil {
		return x.AdditionalIdentifier
	}
	return nil
}

type PayoutRequest_Riskparams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegisterName string `protobuf:"bytes,1,opt,name=registerName,proto3" json:"registerName,omitempty"`
	RegTime      string `protobuf:"bytes,2,opt,name=regTime,proto3" json:"regTime,omitempty"`
	LiveCountry  string `protobuf:"bytes,3,opt,name=liveCountry,proto3" json:"liveCountry,omitempty"`
	BindPhoneNo  string `protobuf:"bytes,4,opt,name=bindPhoneNo,proto3" json:"bindPhoneNo,omitempty"`
	BindEmail    string `protobuf:"bytes,5,opt,name=bindEmail,proto3" json:"bindEmail,omitempty"`
	TaxId        string `protobuf:"bytes,6,opt,name=taxId,proto3" json:"taxId,omitempty"`
}

func (x *PayoutRequest_Riskparams) Reset() {
	*x = PayoutRequest_Riskparams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payout_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutRequest_Riskparams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutRequest_Riskparams) ProtoMessage() {}

func (x *PayoutRequest_Riskparams) ProtoReflect() protoreflect.Message {
	mi := &file_payout_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutRequest_Riskparams.ProtoReflect.Descriptor instead.
func (*PayoutRequest_Riskparams) Descriptor() ([]byte, []int) {
	return file_payout_proto_rawDescGZIP(), []int{3, 0}
}

func (x *PayoutRequest_Riskparams) GetRegisterName() string {
	if x != nil {
		return x.RegisterName
	}
	return ""
}

func (x *PayoutRequest_Riskparams) GetRegTime() string {
	if x != nil {
		return x.RegTime
	}
	return ""
}

func (x *PayoutRequest_Riskparams) GetLiveCountry() string {
	if x != nil {
		return x.LiveCountry
	}
	return ""
}

func (x *PayoutRequest_Riskparams) GetBindPhoneNo() string {
	if x != nil {
		return x.BindPhoneNo
	}
	return ""
}

func (x *PayoutRequest_Riskparams) GetBindEmail() string {
	if x != nil {
		return x.BindEmail
	}
	return ""
}

func (x *PayoutRequest_Riskparams) GetTaxId() string {
	if x != nil {
		return x.TaxId
	}
	return ""
}

type PayoutRequest_Trade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount   string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *PayoutRequest_Trade) Reset() {
	*x = PayoutRequest_Trade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payout_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutRequest_Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutRequest_Trade) ProtoMessage() {}

func (x *PayoutRequest_Trade) ProtoReflect() protoreflect.Message {
	mi := &file_payout_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutRequest_Trade.ProtoReflect.Descriptor instead.
func (*PayoutRequest_Trade) Descriptor() ([]byte, []int) {
	return file_payout_proto_rawDescGZIP(), []int{3, 1}
}

func (x *PayoutRequest_Trade) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *PayoutRequest_Trade) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type PayoutRequest_Accountinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNo   string `protobuf:"bytes,1,opt,name=accountNo,proto3" json:"accountNo,omitempty"`
	AccountType string `protobuf:"bytes,2,opt,name=accountType,proto3" json:"accountType,omitempty"`
	CheckDigit  string `protobuf:"bytes,3,opt,name=checkDigit,proto3" json:"checkDigit,omitempty"`
}

func (x *PayoutRequest_Accountinfo) Reset() {
	*x = PayoutRequest_Accountinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payout_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutRequest_Accountinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutRequest_Accountinfo) ProtoMessage() {}

func (x *PayoutRequest_Accountinfo) ProtoReflect() protoreflect.Message {
	mi := &file_payout_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutRequest_Accountinfo.ProtoReflect.Descriptor instead.
func (*PayoutRequest_Accountinfo) Descriptor() ([]byte, []int) {
	return file_payout_proto_rawDescGZIP(), []int{3, 2}
}

func (x *PayoutRequest_Accountinfo) GetAccountNo() string {
	if x != nil {
		return x.AccountNo
	}
	return ""
}

func (x *PayoutRequest_Accountinfo) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *PayoutRequest_Accountinfo) GetCheckDigit() string {
	if x != nil {
		return x.CheckDigit
	}
	return ""
}

type PayoutRequest_Bankinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankCode     string `protobuf:"bytes,1,opt,name=bankCode,proto3" json:"bankCode,omitempty"`
	BankName     string `protobuf:"bytes,2,opt,name=bankName,proto3" json:"bankName,omitempty"`
	BankBranch   string `protobuf:"bytes,3,opt,name=bankBranch,proto3" json:"bankBranch,omitempty"`
	BankCity     string `protobuf:"bytes,4,opt,name=bankCity,proto3" json:"bankCity,omitempty"`
	CorAccountNo string `protobuf:"bytes,5,opt,name=corAccountNo,proto3" json:"corAccountNo,omitempty"`
}

func (x *PayoutRequest_Bankinfo) Reset() {
	*x = PayoutRequest_Bankinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payout_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutRequest_Bankinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutRequest_Bankinfo) ProtoMessage() {}

func (x *PayoutRequest_Bankinfo) ProtoReflect() protoreflect.Message {
	mi := &file_payout_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutRequest_Bankinfo.ProtoReflect.Descriptor instead.
func (*PayoutRequest_Bankinfo) Descriptor() ([]byte, []int) {
	return file_payout_proto_rawDescGZIP(), []int{3, 3}
}

func (x *PayoutRequest_Bankinfo) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *PayoutRequest_Bankinfo) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *PayoutRequest_Bankinfo) GetBankBranch() string {
	if x != nil {
		return x.BankBranch
	}
	return ""
}

func (x *PayoutRequest_Bankinfo) GetBankCity() string {
	if x != nil {
		return x.BankCity
	}
	return ""
}

func (x *PayoutRequest_Bankinfo) GetCorAccountNo() string {
	if x != nil {
		return x.CorAccountNo
	}
	return ""
}

type PayoutRequest_Name struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName  string `protobuf:"bytes,1,opt,name=firstName,proto3" json:"firstName,omitempty"`
	MiddleName string `protobuf:"bytes,2,opt,name=middleName,proto3" json:"middleName,omitempty"`
	LastName   string `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	FullName   string `protobuf:"bytes,4,opt,name=fullName,proto3" json:"fullName,omitempty"`
}

func (x *PayoutRequest_Name) Reset() {
	*x = PayoutRequest_Name{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payout_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutRequest_Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutRequest_Name) ProtoMessage() {}

func (x *PayoutRequest_Name) ProtoReflect() protoreflect.Message {
	mi := &file_payout_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutRequest_Name.ProtoReflect.Descriptor instead.
func (*PayoutRequest_Name) Descriptor() ([]byte, []int) {
	return file_payout_proto_rawDescGZIP(), []int{3, 4}
}

func (x *PayoutRequest_Name) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *PayoutRequest_Name) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *PayoutRequest_Name) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *PayoutRequest_Name) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

type PayoutRequest_Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentType       string `protobuf:"bytes,1,opt,name=documentType,proto3" json:"documentType,omitempty"`
	DocumentId         string `protobuf:"bytes,2,opt,name=documentId,proto3" json:"documentId,omitempty"`
	DocumentIssueDate  string `protobuf:"bytes,3,opt,name=documentIssueDate,proto3" json:"documentIssueDate,omitempty"`
	DocumentExpireDate string `protobuf:"bytes,4,opt,name=documentExpireDate,proto3" json:"documentExpireDate,omitempty"`
}

func (x *PayoutRequest_Document) Reset() {
	*x = PayoutRequest_Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payout_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutRequest_Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutRequest_Document) ProtoMessage() {}

func (x *PayoutRequest_Document) ProtoReflect() protoreflect.Message {
	mi := &file_payout_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutRequest_Document.ProtoReflect.Descriptor instead.
func (*PayoutRequest_Document) Descriptor() ([]byte, []int) {
	return file_payout_proto_rawDescGZIP(), []int{3, 5}
}

func (x *PayoutRequest_Document) GetDocumentType() string {
	if x != nil {
		return x.DocumentType
	}
	return ""
}

func (x *PayoutRequest_Document) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *PayoutRequest_Document) GetDocumentIssueDate() string {
	if x != nil {
		return x.DocumentIssueDate
	}
	return ""
}

func (x *PayoutRequest_Document) GetDocumentExpireDate() string {
	if x != nil {
		return x.DocumentExpireDate
	}
	return ""
}

type PayoutRequest_Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	City    string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	State   string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	ZipCode string `protobuf:"bytes,4,opt,name=zipCode,proto3" json:"zipCode,omitempty"`
}

func (x *PayoutRequest_Address) Reset() {
	*x = PayoutRequest_Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payout_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutRequest_Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutRequest_Address) ProtoMessage() {}

func (x *PayoutRequest_Address) ProtoReflect() protoreflect.Message {
	mi := &file_payout_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutRequest_Address.ProtoReflect.Descriptor instead.
func (*PayoutRequest_Address) Descriptor() ([]byte, []int) {
	return file_payout_proto_rawDescGZIP(), []int{3, 6}
}

func (x *PayoutRequest_Address) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PayoutRequest_Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *PayoutRequest_Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *PayoutRequest_Address) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

type PayoutRequest_Payeeinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentMethodType string                     `protobuf:"bytes,1,opt,name=paymentMethodType,proto3" json:"paymentMethodType,omitempty"`
	TargetOrg         string                     `protobuf:"bytes,2,opt,name=targetOrg,proto3" json:"targetOrg,omitempty"`
	PayeeType         string                     `protobuf:"bytes,3,opt,name=payeeType,proto3" json:"payeeType,omitempty"`
	AccountInfo       *PayoutRequest_Accountinfo `protobuf:"bytes,4,opt,name=accountInfo,proto3" json:"accountInfo,omitempty"`
	BankInfo          *PayoutRequest_Bankinfo    `protobuf:"bytes,5,opt,name=bankInfo,proto3" json:"bankInfo,omitempty"`
	Name              *PayoutRequest_Name        `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Document          *PayoutRequest_Document    `protobuf:"bytes,7,opt,name=document,proto3" json:"document,omitempty"`
	Address           *PayoutRequest_Address     `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`
	PayeePhone        string                     `protobuf:"bytes,9,opt,name=payeePhone,proto3" json:"payeePhone,omitempty"`
	BirthDate         string                     `protobuf:"bytes,10,opt,name=birthDate,proto3" json:"birthDate,omitempty"`
	Email             string                     `protobuf:"bytes,11,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *PayoutRequest_Payeeinfo) Reset() {
	*x = PayoutRequest_Payeeinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payout_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutRequest_Payeeinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutRequest_Payeeinfo) ProtoMessage() {}

func (x *PayoutRequest_Payeeinfo) ProtoReflect() protoreflect.Message {
	mi := &file_payout_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutRequest_Payeeinfo.ProtoReflect.Descriptor instead.
func (*PayoutRequest_Payeeinfo) Descriptor() ([]byte, []int) {
	return file_payout_proto_rawDescGZIP(), []int{3, 7}
}

func (x *PayoutRequest_Payeeinfo) GetPaymentMethodType() string {
	if x != nil {
		return x.PaymentMethodType
	}
	return ""
}

func (x *PayoutRequest_Payeeinfo) GetTargetOrg() string {
	if x != nil {
		return x.TargetOrg
	}
	return ""
}

func (x *PayoutRequest_Payeeinfo) GetPayeeType() string {
	if x != nil {
		return x.PayeeType
	}
	return ""
}

func (x *PayoutRequest_Payeeinfo) GetAccountInfo() *PayoutRequest_Accountinfo {
	if x != nil {
		return x.AccountInfo
	}
	return nil
}

func (x *PayoutRequest_Payeeinfo) GetBankInfo() *PayoutRequest_Bankinfo {
	if x != nil {
		return x.BankInfo
	}
	return nil
}

func (x *PayoutRequest_Payeeinfo) GetName() *PayoutRequest_Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *PayoutRequest_Payeeinfo) GetDocument() *PayoutRequest_Document {
	if x != nil {
		return x.Document
	}
	return nil
}

func (x *PayoutRequest_Payeeinfo) GetAddress() *PayoutRequest_Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *PayoutRequest_Payeeinfo) GetPayeePhone() string {
	if x != nil {
		return x.PayeePhone
	}
	return ""
}

func (x *PayoutRequest_Payeeinfo) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *PayoutRequest_Payeeinfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type PayoutRequest_Payerinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubMerchantNo string              `protobuf:"bytes,1,opt,name=subMerchantNo,proto3" json:"subMerchantNo,omitempty"`
	Name          *PayoutRequest_Name `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PayoutRequest_Payerinfo) Reset() {
	*x = PayoutRequest_Payerinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payout_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutRequest_Payerinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutRequest_Payerinfo) ProtoMessage() {}

func (x *PayoutRequest_Payerinfo) ProtoReflect() protoreflect.Message {
	mi := &file_payout_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutRequest_Payerinfo.ProtoReflect.Descriptor instead.
func (*PayoutRequest_Payerinfo) Descriptor() ([]byte, []int) {
	return file_payout_proto_rawDescGZIP(), []int{3, 8}
}

func (x *PayoutRequest_Payerinfo) GetSubMerchantNo() string {
	if x != nil {
		return x.SubMerchantNo
	}
	return ""
}

func (x *PayoutRequest_Payerinfo) GetName() *PayoutRequest_Name {
	if x != nil {
		return x.Name
	}
	return nil
}

type PayoutOrder_Trade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount   string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *PayoutOrder_Trade) Reset() {
	*x = PayoutOrder_Trade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payout_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutOrder_Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutOrder_Trade) ProtoMessage() {}

func (x *PayoutOrder_Trade) ProtoReflect() protoreflect.Message {
	mi := &file_payout_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutOrder_Trade.ProtoReflect.Descriptor instead.
func (*PayoutOrder_Trade) Descriptor() ([]byte, []int) {
	return file_payout_proto_rawDescGZIP(), []int{8, 0}
}

func (x *PayoutOrder_Trade) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *PayoutOrder_Trade) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type PayoutOrder_Destination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount       string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	TaxCurrency  string `protobuf:"bytes,2,opt,name=taxCurrency,proto3" json:"taxCurrency,omitempty"`
	ExchangeRate string `protobuf:"bytes,3,opt,name=exchangeRate,proto3" json:"exchangeRate,omitempty"`
	Fee          string `protobuf:"bytes,4,opt,name=fee,proto3" json:"fee,omitempty"`
	FeeCurrency  string `protobuf:"bytes,5,opt,name=feeCurrency,proto3" json:"feeCurrency,omitempty"`
	Currency     string `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	Tax          string `protobuf:"bytes,7,opt,name=tax,proto3" json:"tax,omitempty"`
}

func (x *PayoutOrder_Destination) Reset() {
	*x = PayoutOrder_Destination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payout_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutOrder_Destination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutOrder_Destination) ProtoMessage() {}

func (x *PayoutOrder_Destination) ProtoReflect() protoreflect.Message {
	mi := &file_payout_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutOrder_Destination.ProtoReflect.Descriptor instead.
func (*PayoutOrder_Destination) Descriptor() ([]byte, []int) {
	return file_payout_proto_rawDescGZIP(), []int{8, 1}
}

func (x *PayoutOrder_Destination) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *PayoutOrder_Destination) GetTaxCurrency() string {
	if x != nil {
		return x.TaxCurrency
	}
	return ""
}

func (x *PayoutOrder_Destination) GetExchangeRate() string {
	if x != nil {
		return x.ExchangeRate
	}
	return ""
}

func (x *PayoutOrder_Destination) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *PayoutOrder_Destination) GetFeeCurrency() string {
	if x != nil {
		return x.FeeCurrency
	}
	return ""
}

func (x *PayoutOrder_Destination) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PayoutOrder_Destination) GetTax() string {
	if x != nil {
		return x.Tax
	}
	return ""
}

type PayoutOrder_Source struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount       string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	TaxCurrency  string `protobuf:"bytes,2,opt,name=taxCurrency,proto3" json:"taxCurrency,omitempty"`
	ExchangeRate string `protobuf:"bytes,3,opt,name=exchangeRate,proto3" json:"exchangeRate,omitempty"`
	Fee          string `protobuf:"bytes,4,opt,name=fee,proto3" json:"fee,omitempty"`
	FeeCurrency  string `protobuf:"bytes,5,opt,name=feeCurrency,proto3" json:"feeCurrency,omitempty"`
	Currency     string `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	Tax          string `protobuf:"bytes,7,opt,name=tax,proto3" json:"tax,omitempty"`
}

func (x *PayoutOrder_Source) Reset() {
	*x = PayoutOrder_Source{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payout_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutOrder_Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutOrder_Source) ProtoMessage() {}

func (x *PayoutOrder_Source) ProtoReflect() protoreflect.Message {
	mi := &file_payout_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutOrder_Source.ProtoReflect.Descriptor instead.
func (*PayoutOrder_Source) Descriptor() ([]byte, []int) {
	return file_payout_proto_rawDescGZIP(), []int{8, 2}
}

func (x *PayoutOrder_Source) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *PayoutOrder_Source) GetTaxCurrency() string {
	if x != nil {
		return x.TaxCurrency
	}
	return ""
}

func (x *PayoutOrder_Source) GetExchangeRate() string {
	if x != nil {
		return x.ExchangeRate
	}
	return ""
}

func (x *PayoutOrder_Source) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *PayoutOrder_Source) GetFeeCurrency() string {
	if x != nil {
		return x.FeeCurrency
	}
	return ""
}

func (x *PayoutOrder_Source) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PayoutOrder_Source) GetTax() string {
	if x != nil {
		return x.Tax
	}
	return ""
}

type PayoutOrder_Additionalidentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferenceId string `protobuf:"bytes,1,opt,name=referenceId,proto3" json:"referenceId,omitempty"`
}

func (x *PayoutOrder_Additionalidentifier) Reset() {
	*x = PayoutOrder_Additionalidentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payout_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutOrder_Additionalidentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutOrder_Additionalidentifier) ProtoMessage() {}

func (x *PayoutOrder_Additionalidentifier) ProtoReflect() protoreflect.Message {
	mi := &file_payout_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutOrder_Additionalidentifier.ProtoReflect.Descriptor instead.
func (*PayoutOrder_Additionalidentifier) Descriptor() ([]byte, []int) {
	return file_payout_proto_rawDescGZIP(), []int{8, 3}
}

func (x *PayoutOrder_Additionalidentifier) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

var File_payout_proto protoreflect.FileDescriptor

var file_payout_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x22, 0xe0, 0x02, 0x0a,
	0x16, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x1e, 0x0a,
	0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x65, 0x67, 0x69,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x65, 0x67, 0x69,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x22,
	0x74, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xaa, 0x01, 0x0a, 0x17, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xdb, 0x11, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x4e, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x46,
	0x0a, 0x0a, 0x72, 0x69, 0x73, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x52, 0x69, 0x73, 0x6b, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0a, 0x72, 0x69, 0x73, 0x6b,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x37, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65, 0x12,
	0x43, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x50, 0x61, 0x79, 0x65, 0x65, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x43, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x70, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x79, 0x44, 0x61, 0x79, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a,
	0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x20, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x1a, 0xc2, 0x01, 0x0a, 0x0a,
	0x52, 0x69, 0x73, 0x6b, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x76, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c,
	0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x69,
	0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x62, 0x69, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09,
	0x62, 0x69, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x69, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61,
	0x78, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x78, 0x49, 0x64,
	0x1a, 0x3b, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x1a, 0x6d, 0x0a,
	0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x69, 0x67, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x69, 0x67, 0x69, 0x74, 0x1a, 0xa2, 0x01, 0x0a,
	0x08, 0x42, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e,
	0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e,
	0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x6f, 0x1a, 0x7c, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x1a,
	0xac, 0x01, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x11, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2e,
	0x0a, 0x12, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x1a, 0x67,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x8d, 0x04, 0x0a, 0x09, 0x50, 0x61, 0x79, 0x65,
	0x65, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4f, 0x72,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x49, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a, 0x08, 0x62, 0x61,
	0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6f,
	0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x65, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x65, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x1a, 0x67, 0x0a, 0x09, 0x50, 0x61, 0x79, 0x65, 0x72,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x62,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x34, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x34, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x8e, 0x01, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x54, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x1e, 0x0a,
	0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x22, 0x6e, 0x0a,
	0x13, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x31, 0x0a, 0x06, 0x50, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x22, 0xc9, 0x0a,
	0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x28, 0x0a, 0x0f, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x46,
	0x72, 0x65, 0x65, 0x7a, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x75, 0x6e,
	0x64, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x65, 0x64, 0x65, 0x65, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x62,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x74, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x74, 0x63, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x12, 0x47, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x14, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x52, 0x14, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x1a, 0x3b, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x1a, 0xcd, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x61, 0x78, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x74, 0x61, 0x78, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x22,
	0x0a, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x66, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x65, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x65, 0x65, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x74, 0x61, 0x78, 0x1a, 0xc8, 0x01, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x61, 0x78, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x61,
	0x78, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x66, 0x65, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x65, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x61, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x78, 0x1a,
	0x38, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x32, 0xa4, 0x02, 0x0a, 0x0b, 0x70, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x51, 0x0a, 0x12, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x12,
	0x1b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x50,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6f,
	0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x11,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x6f,
	0x75, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x24, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2e, 0x2f, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_payout_proto_rawDescOnce sync.Once
	file_payout_proto_rawDescData = file_payout_proto_rawDesc
)

func file_payout_proto_rawDescGZIP() []byte {
	file_payout_proto_rawDescOnce.Do(func() {
		file_payout_proto_rawDescData = protoimpl.X.CompressGZIP(file_payout_proto_rawDescData)
	})
	return file_payout_proto_rawDescData
}

var file_payout_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_payout_proto_goTypes = []interface{}{
	(*PayoutQueryPageRequest)(nil),           // 0: order.payout.PayoutQueryPageRequest
	(*Pagination)(nil),                       // 1: order.payout.Pagination
	(*PayoutQueryPageResponse)(nil),          // 2: order.payout.PayoutQueryPageResponse
	(*PayoutRequest)(nil),                    // 3: order.payout.PayoutRequest
	(*BaseResponse)(nil),                     // 4: order.payout.BaseResponse
	(*PayoutResponse)(nil),                   // 5: order.payout.PayoutResponse
	(*PayoutQueryRequest)(nil),               // 6: order.payout.PayoutQueryRequest
	(*PayoutQueryResponse)(nil),              // 7: order.payout.PayoutQueryResponse
	(*PayoutOrder)(nil),                      // 8: order.payout.PayoutOrder
	(*PayoutRequest_Riskparams)(nil),         // 9: order.payout.PayoutRequest.Riskparams
	(*PayoutRequest_Trade)(nil),              // 10: order.payout.PayoutRequest.Trade
	(*PayoutRequest_Accountinfo)(nil),        // 11: order.payout.PayoutRequest.Accountinfo
	(*PayoutRequest_Bankinfo)(nil),           // 12: order.payout.PayoutRequest.Bankinfo
	(*PayoutRequest_Name)(nil),               // 13: order.payout.PayoutRequest.Name
	(*PayoutRequest_Document)(nil),           // 14: order.payout.PayoutRequest.Document
	(*PayoutRequest_Address)(nil),            // 15: order.payout.PayoutRequest.Address
	(*PayoutRequest_Payeeinfo)(nil),          // 16: order.payout.PayoutRequest.Payeeinfo
	(*PayoutRequest_Payerinfo)(nil),          // 17: order.payout.PayoutRequest.Payerinfo
	(*PayoutOrder_Trade)(nil),                // 18: order.payout.PayoutOrder.Trade
	(*PayoutOrder_Destination)(nil),          // 19: order.payout.PayoutOrder.Destination
	(*PayoutOrder_Source)(nil),               // 20: order.payout.PayoutOrder.Source
	(*PayoutOrder_Additionalidentifier)(nil), // 21: order.payout.PayoutOrder.Additionalidentifier
}
var file_payout_proto_depIdxs = []int32{
	8,  // 0: order.payout.PayoutQueryPageResponse.items:type_name -> order.payout.PayoutOrder
	1,  // 1: order.payout.PayoutQueryPageResponse.pagination:type_name -> order.payout.Pagination
	9,  // 2: order.payout.PayoutRequest.riskParams:type_name -> order.payout.PayoutRequest.Riskparams
	10, // 3: order.payout.PayoutRequest.trade:type_name -> order.payout.PayoutRequest.Trade
	16, // 4: order.payout.PayoutRequest.payeeInfo:type_name -> order.payout.PayoutRequest.Payeeinfo
	17, // 5: order.payout.PayoutRequest.payerInfo:type_name -> order.payout.PayoutRequest.Payerinfo
	8,  // 6: order.payout.PayoutQueryResponse.Payout:type_name -> order.payout.PayoutOrder
	18, // 7: order.payout.PayoutOrder.trade:type_name -> order.payout.PayoutOrder.Trade
	19, // 8: order.payout.PayoutOrder.destination:type_name -> order.payout.PayoutOrder.Destination
	20, // 9: order.payout.PayoutOrder.source:type_name -> order.payout.PayoutOrder.Source
	21, // 10: order.payout.PayoutOrder.additionalIdentifier:type_name -> order.payout.PayoutOrder.Additionalidentifier
	11, // 11: order.payout.PayoutRequest.Payeeinfo.accountInfo:type_name -> order.payout.PayoutRequest.Accountinfo
	12, // 12: order.payout.PayoutRequest.Payeeinfo.bankInfo:type_name -> order.payout.PayoutRequest.Bankinfo
	13, // 13: order.payout.PayoutRequest.Payeeinfo.name:type_name -> order.payout.PayoutRequest.Name
	14, // 14: order.payout.PayoutRequest.Payeeinfo.document:type_name -> order.payout.PayoutRequest.Document
	15, // 15: order.payout.PayoutRequest.Payeeinfo.address:type_name -> order.payout.PayoutRequest.Address
	13, // 16: order.payout.PayoutRequest.Payerinfo.name:type_name -> order.payout.PayoutRequest.Name
	3,  // 17: order.payout.payoutOrder.PaymentOrderAndPay:input_type -> order.payout.PayoutRequest
	6,  // 18: order.payout.payoutOrder.PaymentOrderQuery:input_type -> order.payout.PayoutQueryRequest
	0,  // 19: order.payout.payoutOrder.PaymentOrderQueryPage:input_type -> order.payout.PayoutQueryPageRequest
	5,  // 20: order.payout.payoutOrder.PaymentOrderAndPay:output_type -> order.payout.PayoutResponse
	7,  // 21: order.payout.payoutOrder.PaymentOrderQuery:output_type -> order.payout.PayoutQueryResponse
	2,  // 22: order.payout.payoutOrder.PaymentOrderQueryPage:output_type -> order.payout.PayoutQueryPageResponse
	20, // [20:23] is the sub-list for method output_type
	17, // [17:20] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_payout_proto_init() }
func file_payout_proto_init() {
	if File_payout_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_payout_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutQueryPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payout_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payout_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutQueryPageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payout_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payout_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payout_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payout_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payout_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payout_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payout_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutRequest_Riskparams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payout_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutRequest_Trade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payout_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutRequest_Accountinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payout_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutRequest_Bankinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payout_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutRequest_Name); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payout_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutRequest_Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payout_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutRequest_Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payout_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutRequest_Payeeinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payout_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutRequest_Payerinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payout_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutOrder_Trade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payout_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutOrder_Destination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payout_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutOrder_Source); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payout_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutOrder_Additionalidentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_payout_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_payout_proto_goTypes,
		DependencyIndexes: file_payout_proto_depIdxs,
		MessageInfos:      file_payout_proto_msgTypes,
	}.Build()
	File_payout_proto = out.File
	file_payout_proto_rawDesc = nil
	file_payout_proto_goTypes = nil
	file_payout_proto_depIdxs = nil
}
